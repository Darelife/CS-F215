$date
	Mon Sep 02 04:26:34 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_fourBitAdder $end
$var wire 1 ! Cout $end
$var wire 4 " S [3:0] $end
$var wire 1 # initialCout $end
$var reg 4 $ A [3:0] $end
$var reg 4 % B [3:0] $end
$var reg 1 & Cin $end
$var reg 1 ' ctrl $end
$scope module uut $end
$var wire 4 ( A [3:0] $end
$var wire 4 ) B [3:0] $end
$var wire 4 * B_xor_ctrl [3:0] $end
$var wire 4 + B_xor_final [3:0] $end
$var wire 1 ! Cout $end
$var wire 4 , S [3:0] $end
$var wire 1 - ctrl $end
$var wire 1 # initialCout $end
$var wire 4 . tempAns [3:0] $end
$var wire 1 / tempCout $end
$var wire 1 0 tempCout1 $end
$scope module add1 $end
$var wire 4 1 A [3:0] $end
$var wire 4 2 B [3:0] $end
$var wire 1 3 C1 $end
$var wire 1 4 C2 $end
$var wire 1 5 C3 $end
$var wire 1 - Cin $end
$var wire 1 / Cout $end
$var wire 4 6 S [3:0] $end
$scope module adder0 $end
$var wire 1 7 A $end
$var wire 1 8 B $end
$var wire 1 - Cin $end
$var wire 1 3 Cout $end
$var wire 1 9 carry1 $end
$var wire 1 : carry2 $end
$var wire 1 ; sum $end
$var wire 1 < sum1 $end
$scope module HA1 $end
$var wire 1 7 A $end
$var wire 1 8 B $end
$var wire 1 9 C1 $end
$var wire 1 < S $end
$upscope $end
$scope module HA2 $end
$var wire 1 < A $end
$var wire 1 - B $end
$var wire 1 : C1 $end
$var wire 1 ; S $end
$upscope $end
$upscope $end
$scope module adder1 $end
$var wire 1 = A $end
$var wire 1 > B $end
$var wire 1 3 Cin $end
$var wire 1 4 Cout $end
$var wire 1 ? carry1 $end
$var wire 1 @ carry2 $end
$var wire 1 A sum $end
$var wire 1 B sum1 $end
$scope module HA1 $end
$var wire 1 = A $end
$var wire 1 > B $end
$var wire 1 ? C1 $end
$var wire 1 B S $end
$upscope $end
$scope module HA2 $end
$var wire 1 B A $end
$var wire 1 3 B $end
$var wire 1 @ C1 $end
$var wire 1 A S $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 1 C A $end
$var wire 1 D B $end
$var wire 1 4 Cin $end
$var wire 1 5 Cout $end
$var wire 1 E carry1 $end
$var wire 1 F carry2 $end
$var wire 1 G sum $end
$var wire 1 H sum1 $end
$scope module HA1 $end
$var wire 1 C A $end
$var wire 1 D B $end
$var wire 1 E C1 $end
$var wire 1 H S $end
$upscope $end
$scope module HA2 $end
$var wire 1 H A $end
$var wire 1 4 B $end
$var wire 1 F C1 $end
$var wire 1 G S $end
$upscope $end
$upscope $end
$scope module adder3 $end
$var wire 1 I A $end
$var wire 1 J B $end
$var wire 1 5 Cin $end
$var wire 1 / Cout $end
$var wire 1 K carry1 $end
$var wire 1 L carry2 $end
$var wire 1 M sum $end
$var wire 1 N sum1 $end
$scope module HA1 $end
$var wire 1 I A $end
$var wire 1 J B $end
$var wire 1 K C1 $end
$var wire 1 N S $end
$upscope $end
$scope module HA2 $end
$var wire 1 N A $end
$var wire 1 5 B $end
$var wire 1 L C1 $end
$var wire 1 M S $end
$upscope $end
$upscope $end
$upscope $end
$scope module add2 $end
$var wire 4 O A [3:0] $end
$var wire 4 P B [3:0] $end
$var wire 1 Q C1 $end
$var wire 1 R C2 $end
$var wire 1 S C3 $end
$var wire 1 0 Cin $end
$var wire 1 ! Cout $end
$var wire 4 T S [3:0] $end
$scope module adder0 $end
$var wire 1 U A $end
$var wire 1 V B $end
$var wire 1 0 Cin $end
$var wire 1 Q Cout $end
$var wire 1 W carry1 $end
$var wire 1 X carry2 $end
$var wire 1 Y sum $end
$var wire 1 Z sum1 $end
$scope module HA1 $end
$var wire 1 U A $end
$var wire 1 V B $end
$var wire 1 W C1 $end
$var wire 1 Z S $end
$upscope $end
$scope module HA2 $end
$var wire 1 Z A $end
$var wire 1 0 B $end
$var wire 1 X C1 $end
$var wire 1 Y S $end
$upscope $end
$upscope $end
$scope module adder1 $end
$var wire 1 [ A $end
$var wire 1 \ B $end
$var wire 1 Q Cin $end
$var wire 1 R Cout $end
$var wire 1 ] carry1 $end
$var wire 1 ^ carry2 $end
$var wire 1 _ sum $end
$var wire 1 ` sum1 $end
$scope module HA1 $end
$var wire 1 [ A $end
$var wire 1 \ B $end
$var wire 1 ] C1 $end
$var wire 1 ` S $end
$upscope $end
$scope module HA2 $end
$var wire 1 ` A $end
$var wire 1 Q B $end
$var wire 1 ^ C1 $end
$var wire 1 _ S $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 1 a A $end
$var wire 1 b B $end
$var wire 1 R Cin $end
$var wire 1 S Cout $end
$var wire 1 c carry1 $end
$var wire 1 d carry2 $end
$var wire 1 e sum $end
$var wire 1 f sum1 $end
$scope module HA1 $end
$var wire 1 a A $end
$var wire 1 b B $end
$var wire 1 c C1 $end
$var wire 1 f S $end
$upscope $end
$scope module HA2 $end
$var wire 1 f A $end
$var wire 1 R B $end
$var wire 1 d C1 $end
$var wire 1 e S $end
$upscope $end
$upscope $end
$scope module adder3 $end
$var wire 1 g A $end
$var wire 1 h B $end
$var wire 1 S Cin $end
$var wire 1 ! Cout $end
$var wire 1 i carry1 $end
$var wire 1 j carry2 $end
$var wire 1 k sum $end
$var wire 1 l sum1 $end
$scope module HA1 $end
$var wire 1 g A $end
$var wire 1 h B $end
$var wire 1 i C1 $end
$var wire 1 l S $end
$upscope $end
$scope module HA2 $end
$var wire 1 l A $end
$var wire 1 S B $end
$var wire 1 j C1 $end
$var wire 1 k S $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1l
1k
0j
0i
1h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
b1000 T
0S
0R
0Q
b1000 P
b0 O
0N
1M
0L
0K
0J
0I
1H
0G
1F
0E
1D
0C
1B
0A
1@
0?
0>
1=
0<
0;
0:
19
18
17
b1000 6
15
14
13
b101 2
b11 1
00
0/
b1000 .
0-
b1000 ,
b1000 +
b101 *
b101 )
b11 (
0'
0&
b101 %
b11 $
0#
b1000 "
0!
$end
#10
1Z
0_
0e
1k
1V
0`
0f
1l
04
1/
0\
0b
1h
1K
0:
03
0A
0@
0G
0F
1M
0L
1Y
b1001 "
b1001 ,
b1001 T
b1001 +
b1001 P
08
1J
0<
09
0B
0H
1E
0N
0#
00
1;
b1001 .
b1001 6
b1100 *
b1100 2
07
0=
1C
1I
1&
1'
1-
b11 %
b11 )
b1100 $
b1100 (
b1100 1
#20
1_
1e
1`
1f
1Y
b1111 "
b1111 ,
b1111 T
1\
1b
1Z
0/
1V
1<
1N
0K
1A
1G
05
b1111 +
b1111 P
18
0J
1B
1H
0E
1;
b1111 .
b1111 6
b101 *
b101 2
1=
0C
0&
0'
0-
b101 %
b101 )
b1010 $
b1010 (
b1010 1
#30
1_
0Z
1e
1k
1A
0V
1`
1f
1l
14
1/
0Q
1\
1b
1h
0B
1?
0N
1K
1G
15
0Y
b1110 "
b1110 ,
b1110 T
0X
b1110 +
b1110 P
13
08
1>
1J
1<
09
0H
1E
0#
00
0;
b1110 .
b1110 6
1:
b1110 *
b1110 2
17
1C
1&
1'
1-
b1 %
b1 )
b1111 $
b1111 (
b1111 1
#40
1R
0_
1^
0k
0l
0h
1Q
1`
1X
1e
1\
1Z
0f
1V
0b
0Y
b100 "
b100 ,
b100 T
1G
b11 +
b11 P
1#
10
0A
1@
14
1M
b1100 .
b1100 6
0L
0/
0J
1B
0?
0N
0K
b110 *
b110 2
0=
0I
b1001 %
b1001 )
b101 $
b101 (
b101 1
#50
